APP_NAME = "Moneymong"
SCHEME = "Moneymong"

KEYCHAIN_NAME = ENV["KEYCHAIN_NAME"]
KEYCHAIN_PASSWORD = ENV["KEYCHAIN_PASSWORD"]
SLACK_HOOK_URL = ENV["SLACK_HOOK_URL"]

FASTLANE_API_KEY_ID = ENV["FASTLANE_API_KEY_ID"]
FASTLANE_API_KEY_ISSUER_ID = ENV["FASTLANE_API_KEY_ISSUER_ID"]

default_platform(:ios)

platform :ios do
  # 인증서를 키체인에 저장
  desc "Save To Keychain"
  lane :set_keychain do |options|
    create_keychain(
      name: "#{KEYCHAIN_NAME}",
      password: "#{KEYCHAIN_PASSWORD}",
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: true
    )

    import_certificate(
      certificate_path: "Tuist/Signing/release.cer",
      keychain_name: "#{KEYCHAIN_NAME}",
      keychain_password: "#{KEYCHAIN_PASSWORD}"
    )

    import_certificate(
      certificate_path: "Tuist/Signing/release.p12",
      keychain_name: "#{KEYCHAIN_NAME}",
      keychain_password: "#{KEYCHAIN_PASSWORD}"
    )

    install_provisioning_profile(path: "Tuist/Signing/#{APP_NAME}.Release.mobileprovision")
  end

  # 테스트 플라이트 업로드
  desc "Push to TestFlight"
  lane :tf do |options|
    # 앱스토어 커넥트 키 연결
    app_store_connect_api_key(
      key_id: "#{FASTLANE_API_KEY_ID}",
      issuer_id: "#{FASTLANE_API_KEY_ISSUER_ID}",
      key_filepath: "fastlane/AuthKey.p8"
    )
    
    new_build_number = latest_testflight_build_number + 1

    increment_build_number(
      build_number: new_build_number,
      xcodeproj: "Projects/App/Moneymong.xcodeproj"
    )

    # ✅ 빌드
    build_app(
      workspace: "#{APP_NAME}.xcworkspace",
      scheme: "#{SCHEME}",
      export_method: "app-store"
    )

    # ✅ 테스트 플라이트 업로드
    upload_to_testflight(skip_waiting_for_build_processing: true)
    slack(
      message: "⭐️ 테스트 플라이트 업로드 성공",
      channel: "#알림-ios-배포",
      slack_url: "#{SLACK_HOOK_URL}",
      username: "대신 배포해주는 고양이",
      icon_url: "https://avatars.githubusercontent.com/u/21079970?v=4",
      payload: {
        "Build Date" => Time.new.to_s,
      },
      attachment_properties: {
        fields: [
          {
            title: "Scheme",
            value: "Release",
          },
          {
            title: "Build Number",
            value: "#{new_build_number.to_s}",
          }
        ]
      },
      success: true
    )
  end
  
  error do |lane, exception, options|
    slack(
      message: "❗️ 테스트 플라이트 업로드 실패",
      channel: "#알림-ios-배포",
      slack_url: "#{SLACK_HOOK_URL}",
      username: "대신 배포해주는 고양이",
      icon_url: "https://avatars.githubusercontent.com/u/21079970?v=4",
      success: false,
      attachment_properties: {
        fields: [
          {
            title: "Error message",
            value: "#{exception.to_s}",
            short: false
          }
        ]
      },
    )
  end
end
